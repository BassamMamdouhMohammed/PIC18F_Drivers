/* 
 * File:   Interrupt_Internal_Interface.h
 * Author: Bassam Mamdouh Mohammed
 * LinkedIn: https://www.linkedin.com/in/bassam-mamdouh
 * Created on September 14, 2022, 2:15 PM
 */

#ifndef INTERRUPT_INTERNAL_INTERFACE_H
#define	INTERRUPT_INTERNAL_INTERFACE_H

/********************************* Includes *********************************/
#include "Interrupt_General_Interface.h"
/********************************* Macro Definitions ************************/

#if ADC_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 6 ADIF: A/D Converter Interrupt Flag bit */
#define ADC_INTERRUPT_CLEAR_FLAG()    (PIR1bits.ADIF = 0)
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 6 ADIE: A/D Converter Interrupt Enable bit */
#define ADC_INTERRUPT_ENABLE()        (PIE1bits.ADIE = 1)
#define ADC_INTERRUPT_DISABLE()       (PIE1bits.ADIE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 6 ADIP: A/D Converter Interrupt Priority bit */
#define ADC_INTERRUPT_HIGH_PRIORITY() (IPR1bits.ADIP = 1)
#define ADC_INTERRUPT_LOW_PRIORITY()  (IPR1bits.ADIP = 0)
#endif
#endif

#if TIMER0_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* INTCON: INTERRUPT CONTROL REGISTER */
/* bit 2 TMR0IF: TMR0 Overflow Interrupt Flag bit */
#define TIMER0_INTERRUPT_CLEAR_FLAG()    (INTCONbits.TMR0IF = 0)
/* bit 5 TMR0IE: TMR0 Overflow Interrupt Enable bit */
#define TIMER0_INTERRUPT_ENABLE()        (INTCONbits.TMR0IE = 1)
#define TIMER0_INTERRUPT_DISABLE()       (INTCONbits.TMR0IE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* INTCON2: INTERRUPT CONTROL REGISTER 2 */
/* bit 2 TMR0IP: TMR0 Overflow Interrupt Priority bit */
#define TIMER0_INTERRUPT_HIGH_PRIORITY() (INTCON2bits.TMR0IP = 1)
#define TIMER0_INTERRUPT_LOW_PRIORITY()  (INTCON2bits.TMR0IP = 0)
#endif
#endif

#if TIMER1_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 0 TMR1IF: TMR1 Overflow Interrupt Flag bit */
#define TIMER1_INTERRUPT_CLEAR_FLAG()    (PIR1bits.TMR1IF = 0)
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 0 TMR1IE: TMR1 Overflow Interrupt Enable bit */
#define TIMER1_INTERRUPT_ENABLE()        (PIE1bits.TMR1IE = 1)
#define TIMER1_INTERRUPT_DISABLE()       (PIE1bits.TMR1IE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 0 TMR1IP: TMR1 Overflow Interrupt Priority bit */
#define TIMER1_INTERRUPT_HIGH_PRIORITY() (IPR1bits.TMR1IP = 1)
#define TIMER1_INTERRUPT_LOW_PRIORITY()  (IPR1bits.TMR1IP = 0)
#endif
#endif

#if TIMER2_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 1 TMR2IF: TMR2 to PR2 Match Interrupt Flag bit */
#define TIMER2_INTERRUPT_CLEAR_FLAG()    (PIR1bits.TMR2IF = 0)
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 1 TMR2IE: TMR2 to PR2 Match Interrupt Enable bit */
#define TIMER2_INTERRUPT_ENABLE()        (PIE1bits.TMR2IE = 1)
#define TIMER2_INTERRUPT_DISABLE()       (PIE1bits.TMR2IE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 1 TMR2IP: TMR2 to PR2 Match Interrupt Priority bit */
#define TIMER2_INTERRUPT_HIGH_PRIORITY() (IPR1bits.TMR2IP = 1)
#define TIMER2_INTERRUPT_LOW_PRIORITY()  (IPR1bits.TMR2IP = 0)
#endif
#endif

#if TIMER3_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR2: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 2 */
/* bit 1 TMR3IF: TMR3 Overflow Interrupt Flag bit */
#define TIMER3_INTERRUPT_CLEAR_FLAG()    (PIR2bits.TMR3IF = 0)
/* PIE2: PERIPHERAL INTERRUPT ENABLE REGISTER 2 */
/* bit 1 TMR3IE: TMR3 Overflow Interrupt Enable bit */
#define TIMER3_INTERRUPT_ENABLE()        (PIE2bits.TMR3IE = 1)
#define TIMER3_INTERRUPT_DISABLE()       (PIE2bits.TMR3IE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR2: PERIPHERAL INTERRUPT PRIORITY REGISTER 2 */
/* bit 1 TMR3IP: TMR3 Overflow Interrupt Priority bit */
#define TIMER3_INTERRUPT_HIGH_PRIORITY() (IPR2bits.TMR3IP = 1)
#define TIMER3_INTERRUPT_LOW_PRIORITY()  (IPR2bits.TMR3IP = 0)
#endif
#endif

#if CCP_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 2 CCP1IF: CCP1 Interrupt Flag bit */
#define CCP1_INTERRUPT_FEATURE_CLEAR_FLAG    0
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 2 CCP1IE: CCP1 Interrupt Enable bit */
#define CCP1_INTERRUPT_FEATURE_ENABLE        1
#define CCP1_INTERRUPT_FEATURE_DISABLE       0
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 2 CCP1IP: CCP1 Interrupt Priority bit */
#define CCP1_INTERRUPT_FEATURE_HIGH_PRIORITY 1
#define CCP1_INTERRUPT_FEATURE_LOW_PRIORITY  0
#endif
#endif

//#if CCP2_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
///* PIR2: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 2 */
///* bit 0 CCP2IF: CCP2 Interrupt Flag bit */
//#define CCP2_INTERRUPT_FEATURE_CLEAR_FLAG    0
///* PIE2: PERIPHERAL INTERRUPT ENABLE REGISTER 2 */
///* bit 0 CCP2IE: CCP2 Interrupt Enable bit */
//#define CCP2_INTERRUPT_FEATURE_ENABLE        1
//#define CCP2_INTERRUPT_FEATURE_DISABLE       0
//#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
///* IPR2: PERIPHERAL INTERRUPT PRIORITY REGISTER 2 */
///* bit 0 CCP2IP: CCP2 Interrupt Priority bit */
//#define CCP2_INTERRUPT_FEATURE_HIGH_PRIORITY 1
//#define CCP2_INTERRUPT_FEATURE_LOW_PRIORITY  0
//#endif
//#endif

#if UART_TX_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 4 TXIF: EUSART Transmit Interrupt Flag bit */
#define UART_TX_INTERRUPT_CLEAR_FLAG()    (PIR1bits.TXIF = 0)
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 4 TXIE: EUSART Transmit Interrupt Enable bit */
#define UART_TX_INTERRUPT_ENABLE()        (PIE1bits.TXIE = 1)
#define UART_TX_INTERRUPT_DISABLE()       (PIE1bits.TXIE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 4 TXIP: EUSART Transmit Interrupt Priority bit */
#define UART_TX_INTERRUPT_HIGH_PRIORITY() (IPR1bits.TXIP = 1)
#define UART_TX_INTERRUPT_LOW_PRIORITY()  (IPR1bits.TXIP = 0)
#endif
#endif

#if UART_RX_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 5 RCIF: EUSART Receive Interrupt Flag bit */
#define UART_RX_INTERRUPT_CLEAR_FLAG()    (PIR1bits.RCIF = 0)
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 5 RCIE: EUSART Receive Interrupt Enable bit */
#define UART_RX_INTERRUPT_ENABLE()        (PIE1bits.RCIE = 1)
#define UART_RX_INTERRUPT_DISABLE()       (PIE1bits.RCIE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 5 RCIP: EUSART Receive Interrupt Priority bit */
#define UART_RX_INTERRUPT_HIGH_PRIORITY() (IPR1bits.RCIP = 1)
#define UART_RX_INTERRUPT_LOW_PRIORITY()  (IPR1bits.RCIP = 0)
#endif
#endif

#if MSSP_I2C_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR1: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 1 */
/* bit 3 SSPIF: Master Synchronous Serial Port Interrupt Flag bit */
#define MSSP_I2C_INTERRUPT_CLEAR_FLAG()    (PIR1bits.SSPIF = 0)
/* PIE1: PERIPHERAL INTERRUPT ENABLE REGISTER 1 */
/* bit 3 SSPIE: Master Synchronous Serial Port Interrupt Enable bit */
#define MSSP_I2C_INTERRUPT_ENABLE()        (PIE1bits.SSPIE = 1)
#define MSSP_I2C_INTERRUPT_DISABLE()       (PIE1bits.SSPIE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR1: PERIPHERAL INTERRUPT PRIORITY REGISTER 1 */
/* bit 3 SSPIP: Master Synchronous Serial Port Interrupt Priority bit */
#define MSSP_I2C_INTERRUPT_HIGH_PRIORITY() (IPR1bits.SSPIP = 1)
#define MSSP_I2C_INTERRUPT_LOW_PRIORITY()  (IPR1bits.SSPIP = 0)
#endif
#endif

#if MSSP_BUS_COLLISION_INTERRUPT_FEATURE_ENABLE==INTERRUPT_FEATURE_ENABLE
/* PIR2: PERIPHERAL INTERRUPT REQUEST (FLAG) REGISTER 2 */
/* bit 3 BCLIF: Bus Collision Interrupt Flag bit */
#define BUS_COLLISION_INTERRUPT_CLEAR_FLAG()    (PIR2bits.BCLIF = 0)
/* PIE2: PERIPHERAL INTERRUPT ENABLE REGISTER 2 */
/* bit 3 BCLIE: Bus Collision Interrupt Enable bit */
#define BUS_COLLISION_INTERRUPT_ENABLE()        (PIE2bits.BCLIE = 1)
#define BUS_COLLISION_INTERRUPT_DISABLE()       (PIE2bits.BCLIE = 0)
#if INTERRUPT_PRIORITY_ENABLE==INTERRUPT_FEATURE_ENABLE
/* IPR2: PERIPHERAL INTERRUPT PRIORITY REGISTER 2 */
/* bit 3 BCLIP: Bus Collision Interrupt Priority bitt */
#define BUS_COLLISION_INTERRUPT_HIGH_PRIORITY() (IPR2bits.BCLIP = 1)
#define BUS_COLLISION_INTERRUPT_LOW_PRIORITY()  (IPR2bits.BCLIP = 0)
#endif
#endif

/********************************* Macro Functions  *************************/

/********************************* User-Defined Data Types ******************/

/********************************* Functions Declaration ********************/

#endif	/* INTERRUPT_INTERNAL_INTERFACE_H */

